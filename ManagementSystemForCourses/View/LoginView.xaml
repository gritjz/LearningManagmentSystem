<Window x:Class="ManagementSystemForCourses.View.LoginView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ManagementSystemForCourses.View"
        xmlns:common="clr-namespace:ManagementSystemForCourses.Common"
        xmlns:msc="clr-namespace:ManagementSystemForCourses.Controls;assembly=ManagementSystemForCourses.Controls"
        mc:Ignorable="d"    Name="window1"
        Title="Login" Height="650" Width="360"
        FontFamily="Microsoft YaHei" FontWeight="ExtraLight"
        ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        WindowStyle="None" AllowsTransparency="True" Background="{x:Null}">

    <Window.Resources>
        <!--
        close button style template can be used at different window.
        So put it into Assets/Styles/DefaultStyle.xaml for general use.
        DefaultStyle.xaml is a Resource Dictionary item
        In Button, use Template="{StaticResource WindowControlButtonTemplate}" to call template
        -->
        <ResourceDictionary Source="../Assets/Styles/DefaultStyle.xaml">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>


                    <!--<ControlTemplate TargetType="Button" x:Key="CloseButtonTemplate" >
            <Border Background="Transparent" Name="bdCloseButton" CornerRadius="0,10,0,0">
                <Path Data="M0 0 12 12M0 12 12 0" Stroke="White" StrokeThickness="1" 
                    VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName ="bdCloseButton" Property="Background" Value="#22FFFFFF" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName ="bdCloseButton" Property="Background" Value="#44FFFFFF" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>-->

                    <ControlTemplate TargetType="Button" x:Key="LoginButtonTemplate">
                        <Border Background="#007DFA" CornerRadius="5">
                            <Grid>
                                <Border CornerRadius="4" Background="#22FFFFFF" Name="back" Visibility="Hidden"/>

                                <ContentControl Content="{TemplateBinding Content}"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="back"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#44FFFFFF" TargetName="back"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
                    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
                    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
                    <Style x:Key="LoginViewUserNameTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True" CornerRadius="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="&#xe72f;" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" Foreground="#555" FontFamily="../Assets/Fonts/#iconfont"/>
                                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" 
                                          Focusable="false" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"
                                          VerticalAlignment="Center" MinHeight="20"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="LoginViewPasswordPasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
                        <Setter Property="PasswordChar" Value="●"/>
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type PasswordBox}">
                                    <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True" CornerRadius="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="&#xe733;" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" Foreground="#555" FontFamily="../Assets/Fonts/#iconfont"/>
                                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" 
                                          Focusable="false" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"
                                          VerticalAlignment="Center" MinHeight="20"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="LoginViewValidateCodeTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True" CornerRadius="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="80"/>
                                            </Grid.ColumnDefinitions>
                                            <!--Validation code text-->
                                            <TextBlock Text="&#xe61f;" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                           FontSize="15" Foreground="#555" FontFamily="../Assets/Fonts/#iconfont"/>
                                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" 
                                          Focusable="false" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Hidden"
                                          VerticalAlignment="Center" MinHeight="20"/>

                                            <!--Validation code image-->
                                            <!--<Image Source="" Grid.Column="2"/>-->
                                            <msc:ValidationCodeGenerator Name="vcg" Grid.Column="2"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>


    <Border Margin="5" Background="White" CornerRadius="10">
        <Border.Effect>
            <DropShadowEffect Color="Gray" ShadowDepth="0" BlurRadius="5" Opacity="0.3" Direction="0"/>

        </Border.Effect>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="1.8*"/>
                
                <RowDefinition Height="3*"/>
                <RowDefinition Height="60"/>
                <RowDefinition Height="1.8*"/>
            </Grid.RowDefinitions>
            <Border Background="#007DFA" CornerRadius="10,10,0,0" MouseLeftButtonDown="WinTopMove_MouseLeftButtonDown"/>
            <Button Name="bdCloseButton" 
                    VerticalAlignment="Top" HorizontalAlignment="Right"    
                    Content="&#xe602;"
                    Style="{StaticResource WindowControlButtonStyle}"
                    Command="{Binding CloseWindowCommand}" 
                    CommandParameter="{Binding ElementName=window1}"/>
            <!--Login top-->
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" MouseLeftButtonDown="WinTopMove_MouseLeftButtonDown">
                <Border Background="Wheat" CornerRadius="50" Margin="0,0,0,20">
                    <Border.Effect>
                        <DropShadowEffect Color="Wheat" ShadowDepth="0" BlurRadius="10" Opacity="0.3" />
                    </Border.Effect>
                    <Border Width="150" Height="80">
                        <Border.Background>
                            <ImageBrush ImageSource="../Assets/Images/logo.png" />
                        </Border.Background>
                    </Border>
                </Border>
                <TextBlock Text="ZHANG'S COURSES MANAGEMENT SYSTEM" HorizontalAlignment="Center" FontSize="12" Foreground="White"/>
            </StackPanel>

            <!--Login mid-->
            <Grid Grid.Row="1" Margin="20,10" FocusManager.FocusedElement="{Binding ElementName=txtUserName}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition MinHeight="23" Height="auto"/>
                </Grid.RowDefinitions>
                <!--User name-->
                <TextBox Height="40" x:Name="txtUserName" Style="{DynamicResource LoginViewUserNameTextBoxStyle}"
                         Text="{Binding LoginModel.Username,UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoginCommand}" CommandParameter="{Binding ElementName=window1}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <!--Login Password-->
                <PasswordBox Grid.Row="1" Height="40"
                             Style="{DynamicResource LoginViewPasswordPasswordBoxStyle1}"
                             common:PasswordHelper.Attach="false"
                             common:PasswordHelper.Password="{Binding LoginModel.Password, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <PasswordBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoginCommand}" CommandParameter="{Binding ElementName=window1}"/>
                    </PasswordBox.InputBindings>
                </PasswordBox>
                <!--Login Validation Code-->
                <TextBox Grid.Row="2" Height="40" 
                         Style="{DynamicResource LoginViewValidateCodeTextBoxStyle}"
                         Text="{Binding LoginModel.ValidataionCode,UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoginCommand}"
                                    CommandParameter="{Binding ElementName=window1}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <!--Login button-->
                <Button Content="Login" Grid.Row="3" Height="40" Foreground="White" FontSize="16" 
                        Template="{StaticResource LoginButtonTemplate}"
                        Command="{Binding LoginCommand}"
                        CommandParameter="{Binding ElementName=window1}" IsDefault="True"/>
                <!--Login error msg-->
                <TextBlock Text="{Binding ErrorMessage}" Foreground="Red" FontSize="13" 
                           VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" LineHeight="22" Grid.Row="4"/>
            </Grid>
            <!--Login bottom-->
            <Grid Grid.Row="2" Margin="10,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="#DDD"  BorderThickness="0,0,0,1" VerticalAlignment="Center"/>
                    <Border BorderBrush="#DDD"  BorderThickness="0,0,0,1" VerticalAlignment="Center" Grid.Column="2"/>
                    <TextBlock Text="OR" Grid.Column="1" Foreground="#CCC" 
                               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
                <!--Login option buttons-->
                <UniformGrid Columns="5" Grid.Row="1"  >
                    <UniformGrid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="#DDD"/>
                            <Setter Property="FontFamily" Value="../Assets/Fonts/#iconfont"/>
                            <Setter Property="FontSize" Value="30"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="#007DFA" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </UniformGrid.Resources>
                    <TextBlock Text="&#xe600;"/>
                    <Border Background="Transparent"/>
                    <TextBlock Text="&#xe713;"/>
                    <Border Background="Transparent"/>
                    <TextBlock Text="&#xe601;"/>
                </UniformGrid>

            </Grid>

            <Border Grid.Row="3" >

                <msc:ValidationCodeGenerator />
            </Border>
                <!--Progress bar-->
            <Border Background="Transparent" Grid.Row="1" Grid.RowSpan="2"  Visibility="{Binding ShowProgress}">
                <ProgressBar VerticalAlignment="Top" Height="3" IsIndeterminate="True" Foreground="Orange"
                             Background="Transparent" BorderThickness="0"/>
            </Border>
        </Grid>
    </Border>

</Window>